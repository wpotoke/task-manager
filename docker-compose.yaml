name: task_manager

services:
  db:
    image: postgres:16
    volumes:
      - postgres-data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${USER}
      - POSTGRES_PASSWORD=${PASSWORD}
      - POSTGRES_DB=${NAME}

  django:
    build:
      context: .
      dockerfile: django_task_manager/Dockerfile
    volumes:
      - ./django_task_manager:/app
    ports:
      - 127.0.0.1:8000:8000
    env_file:
      - .env
    depends_on:
      - db
    command: python manage.py runserver 0.0.0.0:8000

  fastapi:
    build:
      context: .
      dockerfile: fastapi_task_manager/Dockerfile
    volumes:
      - ./fastapi_task_manager:/app
    ports:
      - 127.0.0.1:8001:8001
    env_file:
      - .env
    environment:
      - fastAPI_POSTGRES_HOST=db
      - fastAPI_POSTGRES_DB=${fastAPI_POSTGRES_DB}
      - fastAPI_POSTGRES_USERNAME=${fastAPI_POSTGRES_USERNAME}
      - fastAPI_POSTGRES_PASSWORD=${fastAPI_POSTGRES_PASSWORD}
      - fastAPI_POSTGRES_PORT=${fastAPI_POSTGRES_PORT}
      - fastAPI_IS_ALLOWED_CREDENTIALS=${fastAPI_IS_ALLOWED_CREDENTIALS}
      - fastAPI_BACKEND_SERVER_HOST=0.0.0.0
      - fastAPI_BACKEND_SERVER_PORT=8001
      - fastAPI_POSTGRES_SCHEMA=${fastAPI_POSTGRES_SCHEMA}
      - fastAPI_IS_DB_ECHO_LOG=${fastAPI_IS_DB_ECHO_LOG}
      - fastAPI_DB_POOL_OVERFLOW=${fastAPI_DB_POOL_OVERFLOW}
      - fastAPI_DB_POOL_SIZE=${fastAPI_DB_POOL_SIZE}
      - fastAPI_BACKEND_SERVER_WORKERS=${fastAPI_BACKEND_SERVER_WORKERS}
      - DATABASE_URL=${fastAPI_POSTGRES_SCHEMA}://${fastAPI_POSTGRES_USERNAME}:{fastAPI_POSTGRES_PASSWORD}@{fastAPI_POSTGRES_HOST}:{fastAPI_POSTGRES_PORT}/{fastAPI_POSTGRES_DB}
    depends_on:
      - db
    command: uvicorn app.main:backend_app --host 0.0.0.0 --port 8001 --reload

volumes:
  postgres-data:
